import asyncio
from FlightRadar24 import FlightRadar24API
import tweepy
import praw
from textblob import TextBlob
import requests
import json

class RealBattleAgent:
    def __init__(self, location, api_keys):
        self.lat, self.lon = location
        self.flight_api = FlightRadar24API()
        self.twitter_api = self.setup_twitter(api_keys['twitter'])
        self.reddit_api = self.setup_reddit(api_keys['reddit'])
        
    async def real_intelligence_scan(self):
        """Actually working intelligence gathering"""
        
        # Real aviation intelligence
        flights = self.get_nearby_flights()
        
        # Real maritime intelligence  
        ships = await self.get_nearby_ships()
        
        # Real social media monitoring
        social_intel = await self.monitor_social_media()
        
        # Real sentiment analysis
        threat_analysis = self.analyze_threats(social_intel)
        
        return {
            'location': {'lat': self.lat, 'lon': self.lon},
            'aviation': flights,
            'maritime': ships,
            'social_intelligence': social_intel,
            'threat_assessment': threat_analysis,
            'status': 'BATTLE_READY_FOR_REAL'
        }
    
    def get_nearby_flights(self):
        """Real flight tracking"""
        bounds = self.flight_api.get_bounds_by_point(self.lat, self.lon, 50)
        flights = self.flight_api.get_flights(bounds=bounds)
        return [{
            'flight_id': f['flight_id'],
            'callsign': f['callsign'], 
            'aircraft': f['aircraft'],
            'altitude': f['altitude'],
            'speed': f['ground_speed']
        } for f in flights[:10]]
    
    async def monitor_social_media(self):
        """Real social media intelligence"""
        # Twitter monitoring
        tweets = self.twitter_api.search_tweets(
            q=f"geocode:{self.lat},{self.lon},50km emergency OR incident OR alert",
            count=50
        )
        
        # Reddit monitoring
        local_subreddits = ['worldnews', 'news', 'europe', 'germany']
        reddit_posts = []
        for sub in local_subreddits:
            subreddit = self.reddit_api.subreddit(sub)
            posts = list(subreddit.hot(limit=10))
            reddit_posts.extend([{
                'title': p.title,
                'score': p.score,
                'url': p.url
            } for p in posts])
        
        return {
            'twitter_alerts': [t.text for t in tweets],
            'reddit_discussions': reddit_posts
        }
